<?phprequire_once("DBinit.php");class CompanyDB {		public static function insertNewCompany($data = array()) {		if (!empty($data)) {			extract($data);						if ($geslo == $potrdi_geslo) {				$role="company";				$dbh = DBInit::getInstance();								$ime = DBinit::sanitizeVariable($ime);				$priimek = DBinit::sanitizeVariable($priimek);				$email = DBinit::sanitizeVariable($email);				$geslo = password_hash($geslo, PASSWORD_DEFAULT);				$role = DBinit::sanitizeVariable($role);				$telefon = DBinit::sanitizeVariable($telefon);								$query = "INSERT INTO lastnik VALUES(NULL, :ime, :priimek, :email, :geslo, :role, :telefon)";				$stmt = $dbh->prepare($query);				$stmt-> bindParam(':ime', $ime, PDO::PARAM_STR);				$stmt-> bindParam(':priimek', $priimek, PDO::PARAM_STR);				$stmt-> bindParam(':email', $email, PDO::PARAM_STR);				$stmt-> bindParam(':geslo', $geslo, PDO::PARAM_STR);				$stmt-> bindParam(':role', $role, PDO::PARAM_STR);				$stmt-> bindParam(':telefon', $telefon, PDO::PARAM_STR);								$stmt->execute();								//---------------------------------------				$query = "SELECT id_lastnik FROM lastnik WHERE email = :email LIMIT 1";				$stmt = $dbh->prepare($query);				$stmt-> bindParam(':email', $email, PDO::PARAM_STR);								$stmt->execute();				$id = $stmt->fetch()["id_lastnik"];								//---------------------------------------				$davcna = DBinit::sanitizeVariable($davcna);				$naziv = DBinit::sanitizeVariable($naziv);				$naslov = DBinit::sanitizeVariable($naslov);				$postna_st = DBinit::sanitizeVariable($postna_st);								$query = "INSERT INTO podjetje VALUES(NULL, :id_lastnik, :naziv, :naslov, :postna_st, :davcna)";				$stmt = $dbh->prepare($query);				$stmt-> bindParam(':id_lastnik', $id, PDO::PARAM_STR);				$stmt-> bindParam(':naziv', $naziv, PDO::PARAM_STR);				$stmt-> bindParam(':naslov', $naslov, PDO::PARAM_STR);				$stmt-> bindParam(':postna_st', $postna_st, PDO::PARAM_STR);				$stmt-> bindParam(':davcna', $davcna, PDO::PARAM_STR);								$stmt->execute();			}		}	}		public static function loginCompanyCheck($data = array()) {		if (!empty($data)) {			extract($data);			$dbh = DBInit::getInstance();						$email = DBinit::sanitizeVariable($email);			$davcna = DBinit::sanitizeVariable($davcna);									$query = "SELECT l.*,p.* FROM lastnik l JOIN podjetje p USING (id_lastnik) WHERE l.email = :email AND p.davcna = :davcna LIMIT 1";			$stmt = $dbh->prepare($query);			$stmt-> bindParam(':email', $email, PDO::PARAM_STR);			$stmt-> bindParam(':davcna', $davcna, PDO::PARAM_STR);						$stmt->execute();			$podatki = $stmt->fetch();						if ($podatki && password_verify($geslo, $podatki["geslo"])) {				return $podatki;			}			return false;		}	}		public static function getCompanies($idLastnik = -1) {		if ($idLastnik > -1) {			$dbh = DBInit::getInstance();						$query = "SELECT id_podjetje, naziv, naslov, postna_st, davcna FROM podjetje WHERE id_lastnik = :id_lastnik";			$stmt = $dbh->prepare($query);			$stmt-> bindParam(':id_lastnik', $idLastnik, PDO::PARAM_STR);			$stmt->execute();			$podatki = $stmt->fetchAll();			if ($podatki) {				return $podatki;			}			return array();		}	}		public static function insertNewWork($data = array()) {		if (!empty($data)) {			extract($data);			$dbh = DBInit::getInstance();						$naziv = DBinit::sanitizeVariable($naziv);			$opis = DBinit::sanitizeVariable($opis);			$placa = DBinit::sanitizeVariable($placa);						$query = "INSERT INTO delo VALUES(NULL, :id_podjetje, :naziv, :opis, :placa, CURRENT_DATE)";			$stmt = $dbh->prepare($query);			$stmt-> bindParam(':id_podjetje', $_SESSION["data"]["id_podjetje"], PDO::PARAM_STR);			$stmt-> bindParam(':naziv', $naziv, PDO::PARAM_STR);			$stmt-> bindParam(':opis', $opis, PDO::PARAM_STR);			$stmt-> bindParam(':placa', $placa, PDO::PARAM_STR);						$stmt->execute();		}	}		public static function getEveryWork($idPodjetje = -1) {		if ($idPodjetje > -1) {			$dbh = DBInit::getInstance();									$query = "SELECT id_delo, naziv, opis, placa, datum_objave FROM delo WHERE id_podjetje = :id_podjetje";			$stmt = $dbh->prepare($query);			$stmt-> bindParam(':id_podjetje', $idPodjetje, PDO::PARAM_STR);			$stmt->execute();			$podatki = $stmt->fetchAll();			if ($podatki) {				return $podatki;			}			return array();		}	}		public static function updateCompanyData($data = array()) {		if (!empty($data)) {			extract($data);			$dbh = DBInit::getInstance();						if (isset($update)) {				$ime = DBinit::sanitizeVariable($ime);				$priimek = DBinit::sanitizeVariable($priimek);				$telefon = DBinit::sanitizeVariable($telefon);								$query = "UPDATE lastnik SET ime = :ime, priimek = :priimek, telefon = :telefon WHERE id_lastnik = :id_lastnik";				$stmt = $dbh->prepare($query);				$stmt-> bindParam(':ime', $ime, PDO::PARAM_STR);				$stmt-> bindParam(':priimek', $priimek, PDO::PARAM_STR);				$stmt-> bindParam(':telefon', $telefon, PDO::PARAM_STR);				$stmt-> bindParam(':id_lastnik', $_SESSION["data"]["id_lastnik"], PDO::PARAM_STR);								$stmt->execute();								$naziv = DBinit::sanitizeVariable($naziv);				$naslov = DBinit::sanitizeVariable($naslov);				$postna_st = DBinit::sanitizeVariable($postna_st);								$query = "UPDATE podjetje SET naziv = :naziv, naslov = :naslov, postna_st = :postna_st WHERE id_podjetje = :id_podjetje";				$stmt = $dbh->prepare($query);				$stmt-> bindParam(':naziv', $naziv, PDO::PARAM_STR);				$stmt-> bindParam(':naslov', $naslov, PDO::PARAM_STR);				$stmt-> bindParam(':postna_st', $postna_st, PDO::PARAM_STR);				$stmt-> bindParam(':id_podjetje', $_SESSION["data"]["id_podjetje"], PDO::PARAM_STR);								$stmt->execute();								$_SESSION["data"]["ime"] = $ime;				$_SESSION["data"]["priimek"] = $priimek;				$_SESSION["data"]["telefon"] = $telefon;				$_SESSION["data"]["naziv"] = $naziv;				$_SESSION["data"]["naslov"] = $naslov;				$_SESSION["data"]["postna_st"] = $postna_st;			} else if (isset($delete)) {				$query = "DELETE FROM lastnik WHERE id_lastnik = :id_lastnik";				$stmt = $dbh->prepare($query);								$stmt-> bindParam(':id_lastnik', $_SESSION["data"]["id_lastnik"], PDO::PARAM_STR);				$stmt->execute();								session_destroy();			}		}	}		public static function updateWork($data = array()) {		if (!empty($data)) {			extract($data);						if (isset($save)) {				$placa = DBinit::sanitizeVariable($placa);				if (is_numeric($placa)) {					$dbh = DBInit::getInstance();										$naziv = DBinit::sanitizeVariable($naziv);					$opis = DBinit::sanitizeVariable($opis);					$id_delo = DBinit::sanitizeVariable($id_delo);										$query = "UPDATE delo SET naziv = :naziv, opis = :opis, placa = :placa WHERE id_delo = :id_delo";					$stmt = $dbh->prepare($query);										$stmt-> bindParam(':naziv', $naziv, PDO::PARAM_STR);					$stmt-> bindParam(':opis', $opis, PDO::PARAM_STR);					$stmt-> bindParam(':placa', $placa, PDO::PARAM_STR);					$stmt-> bindParam(':id_delo', $id_delo, PDO::PARAM_STR);					$stmt->execute();				}			} else if (isset($deleteWork_button)) {				$dbh = DBInit::getInstance();								$id_delo = DBinit::sanitizeVariable($id_delo);								$query = "DELETE FROM delo WHERE id_delo = :id_delo AND id_podjetje = :id_podjetje";				$stmt = $dbh->prepare($query);								$stmt-> bindParam(':id_delo', $id_delo, PDO::PARAM_STR);				$stmt-> bindParam(':id_podjetje', $_SESSION["data"]["id_podjetje"], PDO::PARAM_STR);				$stmt->execute();			}		}	}		public static function addCompany($data = array()) {		if (!empty($data)) {			extract($data);						$dbh = DBInit::getInstance();						$davcna = DBinit::sanitizeVariable($davcna);			$naziv = DBinit::sanitizeVariable($naziv);			$naslov = DBinit::sanitizeVariable($naslov);			$postna_st = DBinit::sanitizeVariable($postna_st);						$query = "INSERT INTO podjetje VALUES(NULL, :id_lastnik, :naziv, :naslov, :postna_st, :davcna)";			$stmt = $dbh->prepare($query);						$stmt-> bindParam(':id_lastnik', $_SESSION["data"]["id_lastnik"], PDO::PARAM_STR);			$stmt-> bindParam(':naziv', $naziv, PDO::PARAM_STR);			$stmt-> bindParam(':naslov', $naslov, PDO::PARAM_STR);			$stmt-> bindParam(':postna_st', $postna_st, PDO::PARAM_STR);			$stmt-> bindParam(':davcna', $davcna, PDO::PARAM_STR);						$stmt->execute();						$query = "SELECT id_podjetje FROM podjetje WHERE id_lastnik=:id_lastnik ORDER BY id_podjetje DESC LIMIT 1";			$stmt = $dbh->prepare($query);			$stmt-> bindParam(':id_lastnik', $_SESSION["data"]["id_lastnik"], PDO::PARAM_STR);			$stmt->execute();			$podatki = $stmt->fetch();						$jeEmpty = $_SESSION["data"]["id_podjetje"]=="" && $_SESSION["data"]["naziv"]=="" &&					   $_SESSION["data"]["naslov"]=="" && $_SESSION["data"]["postna_st"]=="" &&					   $_SESSION["data"]["davcna"]=="";						if ($jeEmpty) {				$_SESSION["data"]["id_podjetje"] = $podatki["id_podjetje"];				$_SESSION["data"]["naziv"] = $naziv;				$_SESSION["data"]["naslov"] = $naslov;				$_SESSION["data"]["postna_st"] = $postna_st;				$_SESSION["data"]["davcna"] = $davcna;			}		}	}		public static function deleteCompany($data = array()) {		if (!empty($data)) {			extract($data);						if (isset($deletCompany_button)) {				$dbh = DBInit::getInstance();								$id_podjetje = DBinit::sanitizeVariable($id_podjetje);				$query = "DELETE FROM prosnja WHERE id_delo in (SELECT id_delo FROM delo WHERE id_podjetje = :id_podjetje)";				$stmt = $dbh->prepare($query);								$stmt-> bindParam(':id_podjetje', $id_podjetje, PDO::PARAM_STR);				$stmt->execute();				$query = "DELETE FROM delo WHERE id_podjetje = :id_podjetje";				$stmt = $dbh->prepare($query);								$stmt-> bindParam(':id_podjetje', $id_podjetje, PDO::PARAM_STR);				$stmt->execute();								$query = "DELETE FROM podjetje WHERE id_podjetje = :id_podjetje";				$stmt = $dbh->prepare($query);								$stmt-> bindParam(':id_podjetje', $id_podjetje, PDO::PARAM_STR);				$stmt->execute();								if ($_SESSION["data"]["id_podjetje"] == $id_podjetje) {					$_SESSION["data"]["id_podjetje"] = "";					$_SESSION["data"]["naziv"] = "";					$_SESSION["data"]["naslov"] = "";					$_SESSION["data"]["postna_st"] = "";					$_SESSION["data"]["davcna"] = "";														foreach ($_SESSION["allCompanies"] as $el) {						if ($el["id_podjetje"] != $id_podjetje) {							$_SESSION["data"]["id_podjetje"] = $el["id_podjetje"];							$_SESSION["data"]["naziv"] = $el["naziv"];							$_SESSION["data"]["naslov"] = $el["naslov"];							$_SESSION["data"]["postna_st"] = $el["postna_st"];							$_SESSION["data"]["davcna"] = $el["davcna"];							break;						}					}				}			}		}	}		public static function getRequestedUsers() {		$dbh = DBInit::getInstance();						$query = "SELECT u.id_uporabnik,u.ime, u.priimek, u.email, u.telefon, u.datum_rojstva, d.id_delo, d.naziv, d.opis, d.datum_objave AS datum_objave_delo, p.besedilo, p.obravnava, p.datum_izdaje AS datum_objave_prosnja				  FROM uporabnik u JOIN prosnja p USING(id_uporabnik) JOIN delo d USING(id_delo) WHERE d.id_podjetje = :id_podjetje";		$stmt = $dbh->prepare($query);		$stmt-> bindParam(':id_podjetje', $_SESSION["data"]["id_podjetje"], PDO::PARAM_STR);		$stmt->execute();		$podatki = $stmt->fetchAll();		if ($podatki) {			return $podatki;		}		return array();	}	public static function companyUpdateUserRequest($data = array()) {		if (!empty($data)) {			extract($data);						$id_uporabnik = DBinit::sanitizeVariable($id_uporabnik);			$id_delo = DBinit::sanitizeVariable($id_delo);			$dbh = DBInit::getInstance();						if (isset($potrdi)) { $obravnava = "potrjeno"; }			else if (isset($zavrni)) { $obravnava = "zavrnjeno"; }			else if (isset($ponastavi)) { $obravnava = NULL; }						$query = "UPDATE prosnja SET obravnava=:obravnava WHERE id_uporabnik = :id_uporabnik AND id_delo=:id_delo";			$stmt = $dbh->prepare($query);						$stmt-> bindParam(':obravnava', $obravnava, PDO::PARAM_STR);			$stmt-> bindParam(':id_uporabnik', $id_uporabnik, PDO::PARAM_STR);			$stmt-> bindParam(':id_delo', $id_delo, PDO::PARAM_STR);			$stmt->execute();		}	}			public static function getByEmail($email) {		if (isset($email)) {			$dbh = DBInit::getInstance();						$email = DBinit::sanitizeVariable($email);				$query = "SELECT count(*) as x FROM lastnik WHERE email = :email LIMIT 1";			$stmt = $dbh->prepare($query);			$stmt-> bindParam(':email', $email, PDO::PARAM_STR);						$stmt->execute();			$podatki = $stmt->fetch();			return ($podatki["x"]==0) ? true : false;		}	}	public static function verifyPassword($geslo) {		if (isset($geslo)) {			$dbh = DBInit::getInstance();						$query = "SELECT geslo FROM lastnik WHERE id_lastnik = :id_lastnik LIMIT 1";			$stmt = $dbh->prepare($query);			$stmt-> bindParam(':id_lastnik', $_SESSION["data"]["id_lastnik"], PDO::PARAM_STR);						$stmt->execute();			$podatki = $stmt->fetch();						return password_verify($geslo, $podatki["geslo"]);		}	}	public static function getByDavcna($davcna) {		if (isset($davcna)) {			$dbh = DBInit::getInstance();						$davcna = DBinit::sanitizeVariable($davcna);				$query = "SELECT count(*) as x FROM podjetje WHERE davcna = :davcna LIMIT 1";			$stmt = $dbh->prepare($query);			$stmt-> bindParam(':davcna', $davcna, PDO::PARAM_STR);						$stmt->execute();			$podatki = $stmt->fetch();			return ($podatki["x"]==0) ? true : false;		}	}	public static function atleastOneCompany() {		$dbh = DBInit::getInstance();				$query = "SELECT count(*) as x FROM podjetje WHERE id_lastnik = :id_lastnik";		$stmt = $dbh->prepare($query);		$stmt-> bindParam(':id_lastnik', $_SESSION["data"]["id_lastnik"], PDO::PARAM_STR);		$stmt->execute();		$podatki = $stmt->fetch();				return ($podatki["x"]>1) ? true : false;	}}?>